<?xml version="1.0" encoding="utf-8"?>
<mx:Application layout="absolute"  
				xmlns:mx="http://www.adobe.com/2006/mxml">
		
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			
			private function showAlert():void{
				// Show how the static Alert variables have been updated also...
				Alert.show("Current Locale: "+resourceManager.localeChain[0]);
			}
		]]>
	</mx:Script>
	
	<!--  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
	<!--  BabelFx LocalizationMap 	with embedded resource bundles									 -->
	<!--  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->

	<!-- 
		Since we are not using an MVC or IoC framework [like Swiz, Parsley, or RobotLegs]
	    we instantiate the LocalizationMap here at the application level.
	
		Note that here the LanguageBar dispatches a special event to the LocaleMap to load/switch the locale.
		Developers should create their OWN version of LanguageBar; customized for their own user experience.
	-->
	<l10n:LocalizationMap_2   	id="myMap" 		 								xmlns:l10n="l10n.*"/>
	<l10n:LanguageBar 			id="languageBar" x="26" y="15"  				xmlns:l10n="l10n.views.*"	/>	


	<!--  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
	<!--  Normal UI and custom UI components														 -->
	<!--  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
	
	<mx:Label 		id="lblTest" 		x="228" y="74" text="Getting Started BabelFx Application" 				/>
	
	<mx:Button      id="btnShowAlert"	x="37" y="102" label="Show Alert Dialog"   click="showAlert();"			/>
	
	<mx:DateField  	id="picker" 		x="229" y="102" formatString="DD/MM/YYYY" monthSymbol="" yearSymbol=""	/>
	
</mx:Application>
